import{routes,root}from"/src/main.js";const pathToRegex=path=>new RegExp("^"+path.replace(/\//g,"\\/").replace(/:\w+/g,"(.+)")+"$");const getParams=match=>{const values=match.result.slice(1);const keys=Array.from(match.route.path.matchAll(/:(\w+)/g)).map(result=>result[1]);return Object.fromEntries(keys.map((key,i)=>{return[key,values[i]]}))};const navigateTo=url=>{history.pushState(null,null,url);router()};const router=async()=>{const potentialMatches=routes.map(route=>{return{route:route,result:location.pathname.match(pathToRegex(route.path))}});let match=potentialMatches.find(potentialMatch=>potentialMatch.result!==null);if(!match){navigateTo("/");return}const view=new match.route.view(getParams(match));var html=await view.getHtml();const cssTagRegex=new RegExp(/\<(css)\s(src)=["'`]?((?:.(?!["'`]?\s+(?:\S+)=|[>"'`]))+.)["'`]?[\s]?\/\>/);var cssTag;while(null!=(cssTag=cssTagRegex.exec(html))){var currentCssTag=cssTag;await fetch(currentCssTag[3]).then(async response=>{await response.text().then(data=>{html=html.replace(currentCssTag[0],'<style>'+data+'</style>');root.innerHTML=html;data=""})})}};window.addEventListener("popstate",router);document.addEventListener("DOMContentLoaded",()=>{document.body.addEventListener("click",e=>{if(e.target.matches("[data-link]")){e.preventDefault();navigateTo(e.target.getAttribute("href"))}});router()});